#cloud-config

package_update: true
package_upgrade: true
package_reboot_if_required: true

packages:
  - wget
  - xfce4
  - xrdp
  - virtualbox
  - virtualbox-ext-pack
  - firefox

write_files:
  - content: |
      {
        "AccountTag"   : "${account_id}",
        "TunnelID"     : "${cloudflare_tunnel_id}",
        "TunnelName"   : "${cloudflare_tunnel_name}",
        "TunnelSecret" : "${cloudflare_tunnel_secret}"
      }
    path: /etc/cloudflared/cert.json
  - content: |
      tunnel: ${cloudflare_tunnel_id}
      credentials-file: /etc/cloudflared/cert.json
      logfile: /var/log/cloudflared.log
      loglevel: info

      ingress:
        - hostname: ${fqdn}
          service: http://localhost:3000
        - hostname: ${ssh_fqdn}
          service: ssh://localhost:22
        - service: http_status:404
    path: /etc/cloudflared/config.yml
  - content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s

      alerting:
        alertmanagers:
          - static_configs:
              - targets:
                # - alertmanager:9093

      scrape_configs:
        - job_name: "website_data_fom_cloudflare"

          # metrics_path defaults to '/metrics'
          # scheme defaults to 'http'.

          static_configs:
            - targets: ["prometheus_exporter:8080"]
    path: /opt/scripts/prometheus.yml
  - content: |
      version: '3.8'

      services:

        prometheus:
          image: prom/prometheus:latest
          restart: "unless-stopped"
          ports:
            - 9090:9090
          volumes:
            - /opt/scripts/prometheus.yml:/etc/prometheus/prometheus.yml
            # - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
          depends_on:
            - prometheus_exporter
          networks:
            - base_net

        prometheus_exporter:
          image: lablabs/cloudflare_exporter:latest
          restart: "unless-stopped"
          ports:
            - 8080:8080
          environment:
            - CF_API_TOKEN=${cloudflare_analytics_api_token}
          networks:
            - base_net

        grafana:
          image: grafana/grafana:latest
          restart: "unless-stopped"
          ports:
            - 3000:3000
          networks:
            - base_net
          depends_on:
            - prometheus_exporter
            - prometheus
          volumes:
            - ./grafana/datasources:/etc/grafana/provisioning/datasources
            - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
            - ./grafana/dashboards:/var/lib/grafana/dashboards
          environment:
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - XDG_CURRENT_DESKTOP=ubuntu:GNOME gnome-control-center

      networks:
        base_net:

    path: /opt/scripts/docker-compose.yml
runcmd:
  - sudo apt-get update && sudo apt-get upgrade -y
  - curl -sSL https://repos.insights.digitalocean.com/install.sh | sudo bash

  # - curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
  #   && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
  #   && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
  #   && sudo apt update \
  #   && sudo apt install gh -y

  - sudo apt-get install ubuntu-desktop mmv htop stacer gnome-software xrdp -y
  - sudo rm /usr/share/polkit-1/actions/org.freedesktop.color.policy

  # - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
  # - sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
  # - sudo apt-get update && sudo apt-get install consul terraform nomad vault packer

  - mkdir -p /etc/cloudflared
  - mkdir -p /opt/scripts
  - wget -O /tmp/cloudflared-linux-amd64.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
  - dpkg -i /tmp/cloudflared-linux-amd64.deb
  - cloudflared service install
  - systemctl start cloudflared
  - systemctl enable cloudflared
  - touch /etc/ssh/ca.pub
  - echo -n "${trusted_pub_key}" >> /etc/ssh/ca.pub
  - echo "PubkeyAuthentication yes" >> /etc/ssh/sshd_config
  - echo "TrustedUserCAKeys /etc/ssh/ca.pub" >> /etc/ssh/sshd_config
  - adduser --disabled-password --gecos "" abc
  - systemctl restart ssh
  - cd /opt/scripts
  - docker-compose up -d
